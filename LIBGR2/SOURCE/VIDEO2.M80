$title  ('Video graphics mode')
        name    Video2

        cseg

        public vidInit
        public vidDone

        public vidGetAddr
        public vidColAddr
        public vidGetFont

        public vidCls
        public vidClsCol
        public vidInitScrBuf



        public bTextAttr


$include (:f1:video2.i80)



; ----------------------------------------------------------------------------
; установка параметров видеорежима из таблицы и программирование регистров
; ----------------------------------------------------------------------------
; in:
;   BC  - структура VIDMODE
vidSetMode:
        ; переносим таблицу параметров видеорежима в системную память
        ; чтобы функции BIOS работали нормально
        lxi     H, pVideoParam
        mvi     E, VIDPARSIZE
    vsetlp:
        ldax    B
        inx     B
        mov     M, A
        inx     H
        dcr     E
        jnz     vsetlp
        ldax    B
        sta     bVideoMode
        ; задаем адрес буфера экрана (режимы 0 и 1) в видео-ОЗУ
        lda     pScrBuf0+1
        rrc
        rrc
        out     90h
        ; адрес знакогенератора (режимы 0 и 1) или буфера экрана (режим 2) в видео-ОЗУ
        lda     pCharGen+1
        rrc
        rrc
        out     91h
        ; адрес массива графики (режим 2) в видео-ОЗУ
        lda     pPixelsBuff+1
        rrc
        rrc
        cma
        out     92h
        ; адрес массива цвета (режим 2) в видео-ОЗУ
        lda     pColorsBuff+1
        rrc
        rrc
        cma
        out     93h
        ret


; ----------------------------------------------------------------------------
; установка видеорежима 2
; ----------------------------------------------------------------------------
vidInit:
        call    vidCls
        di
        lxi     B, tabMode2
        call    vidSetMode
        ; инициализируем буфер экрана (768 байт)
        call    vidInitScrBuf
        ; инициализируем массив изображения
        call    vidCls
        ; устанавливаем палитру
        mvi     C, 0Fh          ; белый текст на черном фоне
        call    vidClsCol
        ; set border color
        xra     A
        out     88h
        ; гасим экран
        in      86h
        ani     0EFh
        out     86h
        ; собственно переходим в граф. режим
        lda     pPixelsBuff+1
        ani     11000000b
        mov     B, A            ; B = биты 14-15 адреса видео-ОЗУ
        in      84h
        ani     00001111b
        ora     B
        ori     10h             ; выставляем бит граф. режима
        out     84h
        ei
        ; разрешаем отображение на экран
VidExit:
        in      86h
        ori     10h
        out     86h
        ret



; ----------------------------------------------------------------------------
; возврат в видеорежим 0
; ----------------------------------------------------------------------------
vidDone:
        call    vidCls
        di
        lxi     B, tabMode0
        call    vidSetMode
        call    vidCls
        ; устанавливаем видеорежим 0
        lda     pScrBuf0+1
        ani     11000000b
        mov     B, A            ; B = биты 14-15 адреса видео-ОЗУ
        in      84h
        ani     00001111b
        ora     B
        ori     20h             ; текстовый, 40 символов
        out     84h
        ei
        ; разрешаем отображение курсора
        mvi     A, 0
        sta     flCurHide
        jmp     VidExit



;============================================================================;
;****************************************************************************;
;****************************************************************************;
;******************************* PRIMITIVES *********************************;
;****************************************************************************;
;****************************************************************************;
;============================================================================;


;------------------------------------------------------------------------
; возвращает адрес образа символа в дефолтном фонте
;------------------------------------------------------------------------
; на входе:
;    C  - символ фонта, для которого вычисляется адрес
; на выходе:
;    HL - адрес фонта
vidGetFont:
        mov     L, C            ; HL = symbol
        mvi     H, 0
        dad     H               ; *2
        dad     H               ; *4
        dad     H               ; *8
        lxi     B, pFont8x8
        dad     B               ; HL = pFont8x8[symbol]
        ret


;------------------------------------------------------------------------
; возвращает адрес видеопамяти по заданным координатам буфера экрана
;------------------------------------------------------------------------
; на входе:
;    C  - x
;    E  - y
; на выходе:
;    HL - адрес видеопамяти в массиве изображения
; save: BC, DE
vidGetAddr:
        lhld    pPixelsBuff
ClkAdr:
        push    B
        push    D
        mov     D, E            ; D = y * 256
        mov     A, C
        ral
        ral
        ral                     ; A = x * 8
        ani     11111000b
        mov     E, A
        dad     D
        pop     D
        pop     B
        ret

;------------------------------------------------------------------------
; возвращает адрес в массиве цвета по заданным координатам экрана
;------------------------------------------------------------------------
; на входе:
;    C  - x
;    E  - y
; на выходе:
;    HL - адрес в массиве цвета
; save: BC, DE
vidColAddr:
        lhld    pColorsBuff
        jmp     ClkAdr


;------------------------------------------------------------------------
; очистка экрана (для реж. 2 - очистка массива изображения (знакогенераторов))
;------------------------------------------------------------------------
vidCls:
        lda     bVideoMode
        cpi     2
        jnz     clstxt
        ; очистка экрана для режима 2
        lhld    pPixelsBuff
        mvi     E, 0
        lxi     B, 6144         ; три массива изобр. (знакогенератора) по 2048 байт (3 по 256*8)
    clsch2:
        mov     M, E
        inx     H
        dcx     B
        mov     A, C
        ora     B
        jnz     clsch2
        ; теперь гасим палитру
        mvi     E, 0Fh          ; дефолтный цвет
    clrcl:
        mov     A, E
        sta     bTextAttr       ; сохраняем цвет
        lhld    pColorsBuff     ; HL - адрес таблицы цвета реж. 2
        lxi     B, 6144         ; три массива изобр. (знакогенератора) по 2048 байт (3 по 256*8)
    clschc:
        mov     M, E
        inx     H
        dcx     B
        mov     A, C
        ora     B
        jnz     clschc

        jmp     rstcur

    clstxt:
        lhld    pScrBuf0
        cpi     1
        jnz     cls0
        ; очистка экрана для режима 1
        lxi     B, 768          ; 32*24
        mvi     E, 20h
    clslp:
        mov     M, E
        inx     H
        dcx     B
        mov     A, B
        ora     C
        jnz     clslp

    rstcur:
        ; устанавливаем курсор в верхний левый угол
        xra     A
        sta     bCurBkGr
        sta     bCurPosX
        sta     bCurPosY
        shld    pCurStored
        ret
    cls0:
        ; очистка экрана для режима 0
        rnc
        mvi     C, 24
    cl0lp:
        ; заполняем невидимую левую часть строки
        lda     bHideLeft
        mvi     B, 0
        call    cl0fil
        ; заполняем видимую часть строки
        lda     bLogWidth
        mvi     B, ' '
        call    cl0fil
        ; заполняем правую часть строки
        lda     bHideRight
        sui     5
        call    cl0fil
        mvi     A, 5       ;5     ; заканчиваем строку кодами '5 6 0D 0E 00'
        mov     M, A
        inr     A          ;6
        inx     H
        mov     M, A
        mvi     A, 0Dh     ;0D
        inx     H
        mov     M, A
        inr     A          ;0E
        inx     H
        mov     M, A
        inx     H
        mvi     B, 0
        mov     M, B
        inx     H
        ; переходим к следующей строке
        dcr     C
        jnz     cl0lp
        lhld    pScrBuf0
        jmp     rstcur

    cl0fil:
        ana     A
        rz
        mov     M, B
        inx     H
        dcr     A
        jnz     cl0fil
        ret


;------------------------------------------------------------------------
; заполнение массива цвета
;------------------------------------------------------------------------
; на входе:
;   C   - цвет фона и текста
vidClsCol:
        mov     E, C
        jmp     clrcl



; ----------------------------------------------------------------------------
;  инициализация буфера экрана дефолтным значением
; ----------------------------------------------------------------------------
vidInitScrBuf:
        lhld    pScrBuf2
        mvi     B, 0
        mvi     C, 3
    @fivbm:
        mov     M, B
        inx     H
        inr     B
        jnz     @fivbm
        dcr     C
        jnz     @fivbm
        ret





;        dseg


bTextAttr:      db 0Fh          ; текущий цвет


; таблицы параметров видеорежимов 0 и 2
tabMode0:       db 64           ; полная ширина экрана, включая не отображаемые области
                db 0            ; кол. не отображаемых символов слева
                db 40           ; видимая ширина экрана
                db 24           ; кол. строк экрана
                db 24           ; кол. пропускаемых символов справа
                dw 0E000h       ; адрес буфера экрана (реж. 0 и 1)
                dw 0E400h       ; адрес таблицы цвета (реж. 1)
                dw 0F000h       ; адрес знакогенератора (реж. 0 и 1)
                dw 0
                dw 0
                dw 0
                dw 0
                db 0            ; номер видеорежима

tabMode2:       db 32           ; полная ширина экрана, включая не отображаемые области
                db 0            ; кол. не отображаемых символов слева
                db 32           ; видимая ширина экрана
                db 24           ; кол. строк экрана
                db 00           ; кол. пропускаемых символов справа
                dw 0
                dw 0
                dw SCRBUF_ADDR  ; адрес буфера экрана (реж. 2)
                dw 0
                dw 0
                dw PIXBUF_ADDR  ; массив изображения для режима 2
                dw COLBUF_ADDR  ; массив цвета для режима 2
                db 2            ; номер видеорежима

end

;SCRBUF_ADDR equ 0D800h   ; адрес буфера экрана (реж. 2)
;PIXBUF_ADDR equ 0C000h   ; массив изображения для режима 2
;COLBUF_ADDR equ 0E000h   ; массив цвета для режима 2
;
;
;9800    1001100000000000b       буфер экрана
;          ^^^
;8000    1000000000000000b       массив изображения
;          ^
;A000    1010000000000000b       массив цвета
;          ^
;
;
;D800    1101100000000000b       буфер экрана
;          ^^^
;C000    1100000000000000b       массив изображения
;          ^
;E000    1110000000000000b       массив цвета
          ^


